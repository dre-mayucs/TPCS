

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 01 23:22:18 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.10
    11                           ; Generated 31/07/2019 GMT
    12                           ; 
    13                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F886 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  0089                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  008F                     	;# 
    87  0090                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  0105                     	;# 
   106  0107                     	;# 
   107  0108                     	;# 
   108  0109                     	;# 
   109  010C                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  0185                     	;# 
   115  0187                     	;# 
   116  0188                     	;# 
   117  0189                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  008F                     	;# 
   163  0090                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0093                     	;# 
   168  0093                     	;# 
   169  0094                     	;# 
   170  0095                     	;# 
   171  0096                     	;# 
   172  0097                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009A                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  0105                     	;# 
   182  0107                     	;# 
   183  0108                     	;# 
   184  0109                     	;# 
   185  010C                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  0185                     	;# 
   191  0187                     	;# 
   192  0188                     	;# 
   193  0189                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  0007                     _PORTC	set	7
   197  0006                     _PORTB	set	6
   198  0005                     _PORTA	set	5
   199  001E                     _ADRESH	set	30
   200  001F                     _ADCON0	set	31
   201  00F9                     _GO_nDONE	set	249
   202  00F8                     _ADON	set	248
   203  0087                     _TRISC	set	135
   204  0086                     _TRISB	set	134
   205  0085                     _TRISA	set	133
   206  009E                     _ADRESL	set	158
   207  009F                     _ADCON1	set	159
   208  0188                     _ANSEL	set	392
   209                           
   210                           ; #config settings
   211  0000                     
   212                           	psect	cinit
   213  07FC                     start_initialization:	
   214  07FC                     __initialization:	
   215  07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218  07FC                     __end_of__initialization:	
   219  07FC  0183               	clrf	3
   220  07FD  120A  118A  2F56   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	cstackCOMMON
   223  0070                     __pcstackCOMMON:	
   224  0070                     ?_main:	
   225  0070                     ?_ADC:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ADC@Set0:	
   229                           ; 2 bytes @ 0x0
   230                           
   231                           
   232                           ; 2 bytes @ 0x0
   233  0070                     	ds	2
   234  0072                     ADC@Set1:	
   235                           
   236                           ; 2 bytes @ 0x2
   237  0072                     	ds	2
   238  0074                     ??_ADC:	
   239                           
   240                           ; 1 bytes @ 0x4
   241  0074                     	ds	1
   242  0075                     ??_main:	
   243                           
   244                           ; 1 bytes @ 0x5
   245  0075                     	ds	1
   246  0076                     main@AN_0:	
   247                           
   248                           ; 2 bytes @ 0x6
   249  0076                     	ds	2
   250  0078                     main@AN_1:	
   251                           
   252                           ; 2 bytes @ 0x8
   253  0078                     	ds	2
   254  007A                     main@AN_2:	
   255                           
   256                           ; 2 bytes @ 0xA
   257  007A                     	ds	2
   258  007C                     main@AN_3:	
   259                           
   260                           ; 2 bytes @ 0xC
   261  007C                     	ds	2
   262                           
   263                           	psect	maintext
   264  0756                     __pmaintext:	
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 49 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  AN_3            2   12[COMMON] int 
   275 ;;  AN_2            2   10[COMMON] int 
   276 ;;  AN_1            2    8[COMMON] int 
   277 ;;  AN_0            2    6[COMMON] int 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         8       0       0       0       0
   289 ;;      Temps:          1       0       0       0       0
   290 ;;      Totals:         9       0       0       0       0
   291 ;;Total ram usage:        9 bytes
   292 ;; Hardware stack levels required when called:    1
   293 ;; This function calls:
   294 ;;		_ADC
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _main
   302  0756                     _main:	
   303  0756                     l700:	
   304                           ;incstack = 0
   305                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   306                           
   307                           
   308                           ;main.c: 51:     TRISA = 0b00001111;
   309  0756  300F               	movlw	15
   310  0757  1683               	bsf	3,5	;RP0=1, select bank1
   311  0758  1303               	bcf	3,6	;RP1=0, select bank1
   312  0759  0085               	movwf	5	;volatile
   313  075A                     l702:	
   314                           
   315                           ;main.c: 52:     TRISB = 0b00000000;
   316  075A  0186               	clrf	6	;volatile
   317  075B                     l704:	
   318                           
   319                           ;main.c: 53:     TRISC = 0b00000000;
   320  075B  0187               	clrf	7	;volatile
   321                           
   322                           ;main.c: 55:     ANSEL = 0b00001111;
   323  075C  300F               	movlw	15
   324  075D  1683               	bsf	3,5	;RP0=1, select bank3
   325  075E  1703               	bsf	3,6	;RP1=1, select bank3
   326  075F  0088               	movwf	8	;volatile
   327  0760                     l706:	
   328                           
   329                           ;main.c: 57:     PORTA = 0b00000000;
   330  0760  1283               	bcf	3,5	;RP0=0, select bank0
   331  0761  1303               	bcf	3,6	;RP1=0, select bank0
   332  0762  0185               	clrf	5	;volatile
   333  0763                     l708:	
   334                           
   335                           ;main.c: 58:     PORTB = 0b00000000;
   336  0763  0186               	clrf	6	;volatile
   337  0764                     l710:	
   338                           
   339                           ;main.c: 59:     PORTC = 0b00000000;
   340  0764  0187               	clrf	7	;volatile
   341  0765                     l712:	
   342                           
   343                           ;main.c: 67:         int AN_0 = ADC(0b00000001, 0b10000000);
   344  0765  3001               	movlw	1
   345  0766  00F0               	movwf	ADC@Set0
   346  0767  3000               	movlw	0
   347  0768  00F1               	movwf	ADC@Set0+1
   348  0769  3080               	movlw	128
   349  076A  00F2               	movwf	ADC@Set1
   350  076B  3000               	movlw	0
   351  076C  00F3               	movwf	ADC@Set1+1
   352  076D  120A  118A  2738  120A  118A  	fcall	_ADC
   353  0772  0871               	movf	?_ADC+1,w
   354  0773  00F7               	movwf	main@AN_0+1
   355  0774  0870               	movf	?_ADC,w
   356  0775  00F6               	movwf	main@AN_0
   357  0776                     l714:	
   358                           
   359                           ;main.c: 68:         int AN_1 = ADC(0b00000101, 0b10000000);
   360  0776  3005               	movlw	5
   361  0777  00F0               	movwf	ADC@Set0
   362  0778  3000               	movlw	0
   363  0779  00F1               	movwf	ADC@Set0+1
   364  077A  3080               	movlw	128
   365  077B  00F2               	movwf	ADC@Set1
   366  077C  3000               	movlw	0
   367  077D  00F3               	movwf	ADC@Set1+1
   368  077E  120A  118A  2738  120A  118A  	fcall	_ADC
   369  0783  0871               	movf	?_ADC+1,w
   370  0784  00F9               	movwf	main@AN_1+1
   371  0785  0870               	movf	?_ADC,w
   372  0786  00F8               	movwf	main@AN_1
   373  0787                     l716:	
   374                           
   375                           ;main.c: 69:         int AN_2 = ADC(0b00001001, 0b10000000);
   376  0787  3009               	movlw	9
   377  0788  00F0               	movwf	ADC@Set0
   378  0789  3000               	movlw	0
   379  078A  00F1               	movwf	ADC@Set0+1
   380  078B  3080               	movlw	128
   381  078C  00F2               	movwf	ADC@Set1
   382  078D  3000               	movlw	0
   383  078E  00F3               	movwf	ADC@Set1+1
   384  078F  120A  118A  2738  120A  118A  	fcall	_ADC
   385  0794  0871               	movf	?_ADC+1,w
   386  0795  00FB               	movwf	main@AN_2+1
   387  0796  0870               	movf	?_ADC,w
   388  0797  00FA               	movwf	main@AN_2
   389  0798                     l718:	
   390                           
   391                           ;main.c: 70:         int AN_3 = ADC(0b00001101, 0b10000000);
   392  0798  300D               	movlw	13
   393  0799  00F0               	movwf	ADC@Set0
   394  079A  3000               	movlw	0
   395  079B  00F1               	movwf	ADC@Set0+1
   396  079C  3080               	movlw	128
   397  079D  00F2               	movwf	ADC@Set1
   398  079E  3000               	movlw	0
   399  079F  00F3               	movwf	ADC@Set1+1
   400  07A0  120A  118A  2738  120A  118A  	fcall	_ADC
   401  07A5  0871               	movf	?_ADC+1,w
   402  07A6  00FD               	movwf	main@AN_3+1
   403  07A7  0870               	movf	?_ADC,w
   404  07A8  00FC               	movwf	main@AN_3
   405  07A9                     l720:	
   406                           
   407                           ;main.c: 72:         PORTC = 0b00000000;
   408  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   409  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   410  07AB  0187               	clrf	7	;volatile
   411  07AC                     l722:	
   412                           
   413                           ;main.c: 74:         if(AN_0 > 150){
   414  07AC  0877               	movf	main@AN_0+1,w
   415  07AD  3A80               	xorlw	128
   416  07AE  00FF               	movwf	btemp+1
   417  07AF  3080               	movlw	128
   418  07B0  027F               	subwf	btemp+1,w
   419  07B1  1D03               	skipz
   420  07B2  2FB5               	goto	u75
   421  07B3  3097               	movlw	151
   422  07B4  0276               	subwf	main@AN_0,w
   423  07B5                     u75:	
   424  07B5  1C03               	skipc
   425  07B6  2FB8               	goto	u71
   426  07B7  2FB9               	goto	u70
   427  07B8                     u71:	
   428  07B8  2FBF               	goto	l726
   429  07B9                     u70:	
   430  07B9                     l724:	
   431                           
   432                           ;main.c: 75:             PORTC += 0b00010000;
   433  07B9  3010               	movlw	16
   434  07BA  00F5               	movwf	??_main
   435  07BB  0875               	movf	??_main,w
   436  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   437  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   438  07BE  0787               	addwf	7,f	;volatile
   439  07BF                     l726:	
   440                           
   441                           ;main.c: 78:         if(AN_1 > 150){
   442  07BF  0879               	movf	main@AN_1+1,w
   443  07C0  3A80               	xorlw	128
   444  07C1  00FF               	movwf	btemp+1
   445  07C2  3080               	movlw	128
   446  07C3  027F               	subwf	btemp+1,w
   447  07C4  1D03               	skipz
   448  07C5  2FC8               	goto	u85
   449  07C6  3097               	movlw	151
   450  07C7  0278               	subwf	main@AN_1,w
   451  07C8                     u85:	
   452  07C8  1C03               	skipc
   453  07C9  2FCB               	goto	u81
   454  07CA  2FCC               	goto	u80
   455  07CB                     u81:	
   456  07CB  2FD2               	goto	l730
   457  07CC                     u80:	
   458  07CC                     l728:	
   459                           
   460                           ;main.c: 79:             PORTC += 0b00100000;
   461  07CC  3020               	movlw	32
   462  07CD  00F5               	movwf	??_main
   463  07CE  0875               	movf	??_main,w
   464  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   465  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   466  07D1  0787               	addwf	7,f	;volatile
   467  07D2                     l730:	
   468                           
   469                           ;main.c: 82:         if(AN_2 > 150){
   470  07D2  087B               	movf	main@AN_2+1,w
   471  07D3  3A80               	xorlw	128
   472  07D4  00FF               	movwf	btemp+1
   473  07D5  3080               	movlw	128
   474  07D6  027F               	subwf	btemp+1,w
   475  07D7  1D03               	skipz
   476  07D8  2FDB               	goto	u95
   477  07D9  3097               	movlw	151
   478  07DA  027A               	subwf	main@AN_2,w
   479  07DB                     u95:	
   480  07DB  1C03               	skipc
   481  07DC  2FDE               	goto	u91
   482  07DD  2FDF               	goto	u90
   483  07DE                     u91:	
   484  07DE  2FE5               	goto	l734
   485  07DF                     u90:	
   486  07DF                     l732:	
   487                           
   488                           ;main.c: 83:             PORTC += 0b01000000;
   489  07DF  3040               	movlw	64
   490  07E0  00F5               	movwf	??_main
   491  07E1  0875               	movf	??_main,w
   492  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   493  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   494  07E4  0787               	addwf	7,f	;volatile
   495  07E5                     l734:	
   496                           
   497                           ;main.c: 86:         if(AN_3 > 150){
   498  07E5  087D               	movf	main@AN_3+1,w
   499  07E6  3A80               	xorlw	128
   500  07E7  00FF               	movwf	btemp+1
   501  07E8  3080               	movlw	128
   502  07E9  027F               	subwf	btemp+1,w
   503  07EA  1D03               	skipz
   504  07EB  2FEE               	goto	u105
   505  07EC  3097               	movlw	151
   506  07ED  027C               	subwf	main@AN_3,w
   507  07EE                     u105:	
   508  07EE  1C03               	skipc
   509  07EF  2FF1               	goto	u101
   510  07F0  2FF2               	goto	u100
   511  07F1                     u101:	
   512  07F1  2F65               	goto	l712
   513  07F2                     u100:	
   514  07F2                     l736:	
   515                           
   516                           ;main.c: 87:             PORTC += 0b10000000;
   517  07F2  3080               	movlw	128
   518  07F3  00F5               	movwf	??_main
   519  07F4  0875               	movf	??_main,w
   520  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   521  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   522  07F7  0787               	addwf	7,f	;volatile
   523  07F8  2F65               	goto	l712
   524  07F9  120A  118A  2800   	ljmp	start
   525  07FC                     __end_of_main:	
   526                           
   527                           	psect	text1
   528  0738                     __ptext1:	
   529 ;; *************** function _ADC *****************
   530 ;; Defined at:
   531 ;;		line 30 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;  Set0            2    0[COMMON] const int 
   534 ;;  Set1            2    2[COMMON] const int 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  2    0[COMMON] int 
   539 ;; Registers used:
   540 ;;		wreg
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         4       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          1       0       0       0       0
   549 ;;      Totals:         5       0       0       0       0
   550 ;;Total ram usage:        5 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _ADC
   561  0738                     _ADC:	
   562  0738                     l690:	
   563                           ;incstack = 0
   564                           ; Regs used in _ADC: [wreg]
   565                           
   566                           
   567                           ;main.c: 30: int ADC(const int Set0, const int Set1);main.c: 31: {;main.c: 32:     ADCON
      +                          0 = Set0;
   568  0738  0870               	movf	ADC@Set0,w
   569  0739  1283               	bcf	3,5	;RP0=0, select bank0
   570  073A  1303               	bcf	3,6	;RP1=0, select bank0
   571  073B  009F               	movwf	31	;volatile
   572                           
   573                           ;main.c: 33:     ADCON1 = Set1;
   574  073C  0872               	movf	ADC@Set1,w
   575  073D  1683               	bsf	3,5	;RP0=1, select bank1
   576  073E  1303               	bcf	3,6	;RP1=0, select bank1
   577  073F  009F               	movwf	31	;volatile
   578  0740                     l692:	
   579                           
   580                           ;main.c: 36:      ADON = 1;
   581  0740  1283               	bcf	3,5	;RP0=0, select bank0
   582  0741  1303               	bcf	3,6	;RP1=0, select bank0
   583  0742  141F               	bsf	31,0	;volatile
   584                           
   585                           ;main.c: 39:     _delay((unsigned long)((40)*(20000000/4000000.0)));
   586  0743  3042               	movlw	66
   587  0744  00F4               	movwf	??_ADC
   588  0745                     u117:	
   589  0745  0BF4               	decfsz	??_ADC,f
   590  0746  2F45               	goto	u117
   591  0747  0000               	nop
   592  0748                     l694:	
   593                           
   594                           ;main.c: 42:     GO_nDONE = 1;
   595  0748  1283               	bcf	3,5	;RP0=0, select bank0
   596  0749  1303               	bcf	3,6	;RP1=0, select bank0
   597  074A  149F               	bsf	31,1	;volatile
   598  074B                     l31:	
   599                           ;main.c: 45:     while(GO_nDONE);
   600                           
   601  074B  189F               	btfsc	31,1	;volatile
   602  074C  2F4E               	goto	u61
   603  074D  2F4F               	goto	u60
   604  074E                     u61:	
   605  074E  2F4B               	goto	l31
   606  074F                     u60:	
   607  074F                     l696:	
   608                           
   609                           ;main.c: 46:     return (ADRESH<<8) + ADRESL;
   610  074F  081E               	movf	30,w	;volatile
   611  0750  00F1               	movwf	?_ADC+1
   612  0751  1683               	bsf	3,5	;RP0=1, select bank1
   613  0752  1303               	bcf	3,6	;RP1=0, select bank1
   614  0753  081E               	movf	30,w	;volatile
   615  0754  00F0               	movwf	?_ADC
   616  0755                     l34:	
   617  0755  0008               	return
   618  0756                     __end_of_ADC:	
   619  007E                     btemp	set	126	;btemp
   620  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     744
                                              5 COMMON     9     9      0
                                _ADC
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  5     1      4     652
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 01 23:22:18 2021

            __CFG_CP$OFF 0000                       l31 074B                       l34 0755  
                     u60 074F                       u61 074E                       u70 07B9  
                     u71 07B8                       u80 07CC                       u81 07CB  
                     u90 07DF                       u91 07DE                       u75 07B5  
                     u85 07C8                       u95 07DB                      _ADC 0738  
                    l700 0756                      l710 0764                      l702 075A  
                    l720 07A9                      l712 0765                      l704 075B  
                    l730 07D2                      l722 07AC                      l714 0776  
                    l706 0760                      l732 07DF                      l724 07B9  
                    l716 0787                      l708 0763                      l734 07E5  
                    l726 07BF                      l718 0798                      l736 07F2  
                    l728 07CC                      l690 0738                      l692 0740  
                    l694 0748                      l696 074F                      u100 07F2  
                    u101 07F1                      u105 07EE                      u117 0745  
           __CFG_CPD$OFF 0000             __CFG_IESO$ON 0000             __CFG_FOSC$HS 0000  
                   ?_ADC 0070             __CFG_LVP$OFF 0000                     _ADON 00F8  
           __CFG_WRT$OFF 0000                     _main 0756                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
                  ??_ADC 0074                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087           __CFG_FCMEN$OFF 0000                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0075                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0070                  ADC@Set0 0070  
                ADC@Set1 0072               __pmaintext 0756                  __ptext1 0738  
           __size_of_ADC 001E     end_of_initialization 07FC      start_initialization 07FC  
            __end_of_ADC 0756                ___latbits 0002                 _GO_nDONE 00F9  
      __CFG_BOR4V$BOR40V 0000            __size_of_main 00A6                 main@AN_0 0076  
               main@AN_1 0078                 main@AN_2 007A                 main@AN_3 007C  
